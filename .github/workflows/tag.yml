name: Tag
on:
  push:
    tags:
      - "*"
permissions:
  contents: read

jobs:
  build:
    name: Build
    permissions:
      id-token: write # required for AWS assume role
      # This is because the permission block is replacive instead of additive so setting
      # id-token removes any other permissions the job has and goreleaser need to write contents
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform: ["1.9.7"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: '1.24'
          cache: false

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We need the whole history so that goreleaser can figure out the changes
          fetch-depth: 0

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ matrix.terraform }}/terraform_${{ matrix.terraform }}_linux_amd64.zip -O /tmp/terraform.zip
          sudo unzip -o -d /usr/local/bin/ /tmp/terraform.zip

      - uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::043612128888:role/nrd-oss-terragrunt-github-actions-ci

      - name: Run full tests on releases
        env:
          AWS_REGION: us-east-1
        run: |
          make full-test

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
